{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`api-example-generator`\n\nExamples generator from AMF model.\n\n## Data model\n\nThe result of calling `generatePayloadsExamples()`, `generatePayloadExamples()`,\nor `computeExamples()` is an array of view models.\n\n### ExampleModel\n\n- **hasRaw** `Boolean` - if true then `raw` property has a value\n- **hasTitle** `Boolean` - if true then `title` property has a value\n- **hasUnion** `Boolean` - if true then `values` property has a value\n- **value** `String`, Optional - Example to render\n- **title** - `String`, Optional - Example name, only when `hasTitle` is set\n- **raw** `String`, Optional - Raw value of RAML example. This value is a\nYAML or JSON schema value. This is only set when raw value is available in\nthe model and it is not JSON/XML.\n- **values** `Array<ExampleModel>`, Optional - Only when `hasUnion` is set.\n\n## Usage\n\nTo generate examples for a list payloads\n\n```javascript\nconst supportedOperation = {...}; // definition of AMF supported operation\nconst payloads = getPayloads(supportedOperation); // Extract array of payloads from e.g. Expects\nconst mediaTypes = generator.listMedia(payloads);\nconst examples = generator.generatePayloadsExamples(payloads, mediaTypes[0]);\nconsole.log(examples);\n```\n\nTo generate examples from a payload\n\n```javascript\nconst examples = generator.generatePayloadExamples(payloads[0], 'application/json');\nconsole.log(examples);\n```\n\nTo generate examples from any object to any mime\n\n```javascript\nconst shape = getTypeDeclaration(); // gets type definition\nconst examples = generator.computeExamples(shape, 'application/json');\nconsole.log(examples);\n```\n\n## Processing options\n\n- `rawOnly` - list \"raw\" examples only.\n- `noAuto` - Don't generate an example from object properties if the example is\nnot defined in API file.\n- `typeName` - Processed type name, used for XML types to use right XML element wrapper name.",
      "summary": "",
      "path": "api-example-generator.html",
      "properties": [
        {
          "name": "amfModel",
          "type": "(Object | Array)",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "privacy": "public",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 129,
              "column": 8
            },
            "end": {
              "line": 129,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "ns",
          "type": "Object | null | undefined",
          "description": "A namespace for AMF model",
          "privacy": "public",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 133,
              "column": 8
            },
            "end": {
              "line": 139,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        }
      ],
      "methods": [
        {
          "name": "_getAmfKey",
          "description": "Returns compact model key for given value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "String",
              "description": "AMF orioginal property"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Compact model property name or the same value if\nvalue not found in the context."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureAmfModel",
          "description": "Ensures that the model is AMF object.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 197,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf",
              "type": "(Object | Array)",
              "description": "AMF json/ld model"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "API spec"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureArray",
          "description": "Ensures that the value is an array.\nIt returns undefined when there's no value.\nIt returns the same array if the value is already an array.\nIt returns new array of the item is not an array.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 207,
              "column": 4
            },
            "end": {
              "line": 215,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(Array | any)",
              "description": "An item to test"
            }
          ],
          "return": {
            "type": "(Array | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getValue",
          "description": "Gets a signle scalar value from a model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 222,
              "column": 4
            },
            "end": {
              "line": 240,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "any",
            "desc": "Value for key"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getValueArray",
          "description": "Gets values from a model as an array of `@value` properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 254,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "Array.<any>",
            "desc": "Value for key"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_hasType",
          "description": "Checks if a model has a type.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 273,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Model to test"
            },
            {
              "name": "type",
              "type": "String",
              "description": "Type name"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if model has a type."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_hasProperty",
          "description": "Checks if a shape has a property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 280,
              "column": 4
            },
            "end": {
              "line": 283,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "?Object",
              "description": "The shape to test"
            },
            {
              "name": "key",
              "type": "?String",
              "description": "Property name to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyArray",
          "description": "Computes array value of a property in a model (shape).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 291,
              "column": 4
            },
            "end": {
              "line": 301,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape object"
            },
            {
              "name": "key",
              "type": "String",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "(Array.<any> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyObject",
          "description": "Computes a value of a property in a model (shape).\nIt takes first value of a property, if exists.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 310,
              "column": 4
            },
            "end": {
              "line": 314,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape object"
            },
            {
              "name": "key",
              "type": "String",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "(any | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasStringValue",
          "description": "Tests if a passed argumet exists.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 321,
              "column": 4
            },
            "end": {
              "line": 323,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(String | Object | Number)",
              "description": "A value to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasArrayValue",
          "description": "Computes if passed argument is an array and has a value.\nIt does not check for type or value of the array items.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 330,
              "column": 4
            },
            "end": {
              "line": 332,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Array",
              "description": "Value to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDescription",
          "description": "Computes description for a shape.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 338,
              "column": 4
            },
            "end": {
              "line": 340,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Description value."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHeaders",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 344,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeQueryParameters",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 346,
              "column": 4
            },
            "end": {
              "line": 348,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeResponses",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 350,
              "column": 4
            },
            "end": {
              "line": 352,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeServerVariables",
          "description": "Computes value for `serverVariables` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 359,
              "column": 4
            },
            "end": {
              "line": 361,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Variables if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointVariables",
          "description": "Computes value for `endpointVariables` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 368,
              "column": 4
            },
            "end": {
              "line": 370,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "endpoint",
              "type": "Object",
              "description": "Endpoint model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Parameters if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePayload",
          "description": "Computes value for the `payload` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 377,
              "column": 4
            },
            "end": {
              "line": 379,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "expects",
              "type": "Object",
              "description": "Current value of `expects` property."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Payload model if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReturns",
          "description": "Computes value for `returns` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 386,
              "column": 4
            },
            "end": {
              "line": 388,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeSecurity",
          "description": "Computes value for `security` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasCustomProperties",
          "description": "Computes value for `hasCustomProperties` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 404,
              "column": 4
            },
            "end": {
              "line": 406,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeApiVersion",
          "description": "Computes API version from the AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 413,
              "column": 4
            },
            "end": {
              "line": 419,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amfModel",
              "type": "(Object | Array.<Object>)"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEncodes",
          "description": "Computes model's `encodes` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 426,
              "column": 4
            },
            "end": {
              "line": 438,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "?Object",
              "description": "AMF data model"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of encodes"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDeclares",
          "description": "Computes list of declarations in the AMF api model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 445,
              "column": 4
            },
            "end": {
              "line": 458,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of declarations"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReferences",
          "description": "Computes list of references in the AMF api model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 465,
              "column": 4
            },
            "end": {
              "line": 478,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of declarations"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeWebApi",
          "description": "Computes AMF's `http://schema.org/WebAPI` model",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 485,
              "column": 4
            },
            "end": {
              "line": 493,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Web API declaration."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeServer",
          "description": "Computes value for `server` property that is later used with other computations.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 500,
              "column": 4
            },
            "end": {
              "line": 508,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF model for an API"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "The server model"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointUri",
          "description": "Computes endpoint's URI based on `amfModel` and `endpoint` models.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 518,
              "column": 4
            },
            "end": {
              "line": 530,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "Server model of AMF API."
            },
            {
              "name": "endpoint",
              "type": "Object",
              "description": "Endpoint model"
            },
            {
              "name": "baseUri",
              "type": "?String",
              "description": "Current value of `baseUri` property"
            },
            {
              "name": "version",
              "type": "?String",
              "description": "API current version"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Endpoint's URI"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getBaseUri",
          "description": "Computes base URI value from either `baseUri`, `iron-meta` with\n`ApiBaseUri` key or `amfModel` value (in this order).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 540,
              "column": 4
            },
            "end": {
              "line": 551,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "baseUri",
              "type": "String",
              "description": "Value of `baseUri` property"
            },
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "List of supported protocols"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Base uri value. Can be empty string."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getAmfBaseUri",
          "description": "Computes base URI from AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 561,
              "column": 4
            },
            "end": {
              "line": 565,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "Listy of supporte dprotocols. If not\nprovided and required to compute the url it uses `amfModel` to compute\nprotocols"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Base uri value if exists."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureUrlScheme",
          "description": "A function that makes sure that the URL has a scheme definition.\nIf no supported protocols information is available it assumes `http`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 577,
              "column": 4
            },
            "end": {
              "line": 591,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "A url value"
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "List of supported by the API protocols\nAn array of string like: `['HTTP', 'HTTPS']`. It lowercase the value.\nIf not set it tries to read supported protocols value from `amfModel`\nproperty."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Url with scheme."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeProtocols",
          "description": "Computes supported protocols by the API.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 598,
              "column": 4
            },
            "end": {
              "line": 604,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Object | Array)",
              "description": "AMF data model"
            }
          ],
          "return": {
            "type": "(Array.<String> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeExpects",
          "description": "Computes value for the `expects` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 611,
              "column": 4
            },
            "end": {
              "line": 619,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyValue",
          "description": "Tries to find an example value (whether it's default value or from an\nexample) to put it into snippet's values.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 627,
              "column": 4
            },
            "end": {
              "line": 648,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "A http://raml.org/vocabularies/http#Parameter property"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpoints",
          "description": "Computes list of endpoints from a WebApi model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 654,
              "column": 4
            },
            "end": {
              "line": 660,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Always returns an array of endpoints."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointModel",
          "description": "Computes model for an endpoint documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 668,
              "column": 4
            },
            "end": {
              "line": 671,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "id",
              "type": "String",
              "description": "Selected shape ID"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "An endponit definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointByPath",
          "description": "Computes model for an endpoint documentation using it's path.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 679,
              "column": 4
            },
            "end": {
              "line": 690,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "path",
              "type": "String",
              "description": "Endpoint path"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "An endponit definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeMethodModel",
          "description": "Computes method for the method documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 698,
              "column": 4
            },
            "end": {
              "line": 704,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A method definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeOperations",
          "description": "Computes list of operations in an endpoint",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 711,
              "column": 4
            },
            "end": {
              "line": 718,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "The WebApi AMF model"
            },
            {
              "name": "id",
              "type": "String",
              "description": "Endpoint ID"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of SupportedOperation objects"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeMethodEndpoint",
          "description": "Computes an endpoint for a method.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 725,
              "column": 4
            },
            "end": {
              "line": 746,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "The WebApi AMF model"
            },
            {
              "name": "methodId",
              "type": "String",
              "description": "Method id"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "An endpoint model of undefined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "__computeMethodsListForMethod",
          "description": "Computes a list of methods for an endpoint that contains a method with\ngiven id.",
          "privacy": "private",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 755,
              "column": 4
            },
            "end": {
              "line": 762,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "WebApi model"
            },
            {
              "name": "methodId",
              "type": "String",
              "description": "Method id."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "A list of sibling methods or undefined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeType",
          "description": "Computes a type documentation model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 771,
              "column": 4
            },
            "end": {
              "line": 788,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "declares",
              "type": "Array",
              "description": "Current value of `declares` property"
            },
            {
              "name": "references",
              "type": "?Array",
              "description": "Current value of `references` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A type definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReferenceType",
          "description": "Computes a type model from a reference (library for example).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 795,
              "column": 4
            },
            "end": {
              "line": 810,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "reference",
              "type": "(Object | Array)",
              "description": "AMF model for a reference to extract the data from"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Node ID to look for"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "Type definition or undefined if not found."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeSecurityModel",
          "description": "Computes model for selected security definition.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 818,
              "column": 4
            },
            "end": {
              "line": 823,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "declares",
              "type": "Array",
              "description": "Current value of `declares` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A security definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDocument",
          "description": "Computes a documentation model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 831,
              "column": 4
            },
            "end": {
              "line": 838,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A method definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_resolve",
          "description": "Resolves a reference to an external fragment.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 845,
              "column": 4
            },
            "end": {
              "line": 894,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "A shape to resolve"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Resolved shape."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getLinkTarget",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 896,
              "column": 4
            },
            "end": {
              "line": 918,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf"
            },
            {
              "name": "id"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getReferenceId",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 920,
              "column": 4
            },
            "end": {
              "line": 937,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf"
            },
            {
              "name": "id"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_resolveRecursive",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 939,
              "column": 4
            },
            "end": {
              "line": 950,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getExampleValue",
          "description": "Gets string value for an example data model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 959,
              "column": 4
            },
            "end": {
              "line": 972,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Example item model"
            },
            {
              "name": "isJson",
              "type": "Boolean",
              "description": "If set it checks if the `raw` value is valid JSON.\nIf it isn't then it parses structured value."
            }
          ],
          "return": {
            "type": "String"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeExampleFromStructuredValue",
          "description": "Computes an example from example structured value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 979,
              "column": 4
            },
            "end": {
              "line": 1000,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "`structuredValue` item model."
            }
          ],
          "return": {
            "type": "(Object | Array)",
            "desc": "Javascript object or array with structured value."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeStructuredExampleValue",
          "description": "Computes value with propert data type for a structured example.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 1006,
              "column": 4
            },
            "end": {
              "line": 1032,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Structured example item model."
            }
          ],
          "return": {
            "type": "(String | Boolean | Number)",
            "desc": "Value for the example."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "listMedia",
          "description": "Lists media types names for payloads.\nThe `payloads` is an array of AMF Payload shape. It can be single Payload\nshape as a convenient method for compact model.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 2
            },
            "end": {
              "line": 98,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "payloads",
              "type": "(Array.<Object> | Object)",
              "description": "List of payloads AMF's Request shape."
            }
          ],
          "return": {
            "type": "(Array.<String> | undefined)",
            "desc": "Returns a list of mime types or undefined\nif not found."
          }
        },
        {
          "name": "generatePayloadsExamples",
          "description": "Generates a list of examples from an AMF Payloads array for a given media type.\nThe shape can be an Example in which case it will return the example value.\nIf the shape is other shape than Example shape then it looks for examples array and\nuse it to generate values. Otherwise it tries to generate an example from\nobject properties (if object).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 2
            },
            "end": {
              "line": 137,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "payloads",
              "type": "(Array.<Object> | Object)",
              "description": "List of payloads to process."
            },
            {
              "name": "media",
              "type": "String",
              "description": "A media to for which to generate the examles."
            },
            {
              "name": "opts",
              "type": "Object",
              "description": "Generation options:\n- noAuto `Boolean` - When set it only returns examples defined in API spec file.\nWhen not set it generates examples from properties when the example is not\ndefined.\n- type `String` - Type name of an union type. If not set it uses first type\n- typeName `String` - When generating XML example name of the type to use as main node."
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Example value."
          }
        },
        {
          "name": "generatePayloadExamples",
          "description": "Generates a list of examples for a single AMF Payload shape.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 160,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "payload",
              "type": "Object",
              "description": "AMF Payload shape."
            },
            {
              "name": "mime",
              "type": "String",
              "description": "A mime type to use."
            },
            {
              "name": "opts",
              "type": "Object",
              "description": "Generation options. See `generatePayloadsExamples()`."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "List of examples."
          }
        },
        {
          "name": "computeExamples",
          "description": "Computes examples from an AMF shape.\nIt returns examples defined in API spec file. If examples are not defined\nand `opts.noAuto` flag is not set then it generates an example value from\nobject properties (if an object represents scalar, object, union, or an array).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 2
            },
            "end": {
              "line": 236,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema",
              "type": "Object",
              "description": "Any AMF schema."
            },
            {
              "name": "mime",
              "type": "String",
              "description": "Examples media type. Currently `application/json` and\n`application/xml` are supported."
            },
            {
              "name": "opts",
              "type": "Object",
              "description": "Generation options. See `generatePayloadsExamples()`.\nBesides that, `opts.typeId` is required to compute examples for a payload.\nThe `typeId` is a value of `@id` of the Payload shape."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          }
        },
        {
          "name": "_readJsonSchema",
          "description": "Reads a raw value of JSON schema if available.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 2
            },
            "end": {
              "line": 261,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema",
              "type": "Object",
              "description": "Schema shape of a type."
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "JSON schema if exists."
          }
        },
        {
          "name": "_computeFromExamples",
          "description": "Computes examples value from a list of examples.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 2
            },
            "end": {
              "line": 286,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "examples",
              "type": "Array.<Object>",
              "description": "List of AMF Example schapes."
            },
            {
              "name": "mime",
              "type": "String",
              "description": "Examples media type. Currently `application/json` and\n`application/xml` are supported."
            },
            {
              "name": "opts",
              "type": "Object",
              "description": "Generation options. See `generatePayloadsExamples()`.\nBesides that, `opts.typeId` is required to compute examples for a payload.\nThe `typeId` is a value of `@id` of the Payload shape."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          }
        },
        {
          "name": "_listTypeExamples",
          "description": "Uses Example shape's source maps to determine which examples should be rendered.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 293,
              "column": 2
            },
            "end": {
              "line": 329,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "examples",
              "type": "Array.<Object>",
              "description": "List of AMF Example schapes."
            },
            {
              "name": "typeId",
              "type": "String",
              "description": "Payload ID"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          }
        },
        {
          "name": "_generateFromExample",
          "description": "Generate an example from an example shape.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 338,
              "column": 2
            },
            "end": {
              "line": 418,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "example",
              "type": "Object",
              "description": "Resolved example."
            },
            {
              "name": "mime",
              "type": "String",
              "description": "Example content type."
            },
            {
              "name": "opts",
              "type": "?Object",
              "description": "Processing options."
            }
          ],
          "return": {
            "type": "(String | undefined)"
          }
        },
        {
          "name": "_computeExampleArraySchape",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 420,
              "column": 2
            },
            "end": {
              "line": 439,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema"
            },
            {
              "name": "mime"
            },
            {
              "name": "opts"
            }
          ]
        },
        {
          "name": "_computeUnionExamples",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 441,
              "column": 2
            },
            "end": {
              "line": 473,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema"
            },
            {
              "name": "mime"
            },
            {
              "name": "opts"
            }
          ]
        },
        {
          "name": "_computeScalarType",
          "description": "Computes value from defined `datatype` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 479,
              "column": 2
            },
            "end": {
              "line": 502,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "A shape with `datatype` property."
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Value of the data type."
          }
        },
        {
          "name": "_jsonFromStructure",
          "description": "Creates a JSON example representation from AMF example's structure\ndefinition.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 509,
              "column": 2
            },
            "end": {
              "line": 546,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "structure",
              "type": "Object"
            }
          ],
          "return": {
            "type": "any"
          }
        },
        {
          "name": "_jsonFromStructureValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 548,
              "column": 2
            },
            "end": {
              "line": 565,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "obj"
            },
            {
              "name": "isArray"
            },
            {
              "name": "key"
            },
            {
              "name": "resolvedPrefix"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_xmlFromStructure",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 567,
              "column": 2
            },
            "end": {
              "line": 591,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "structure"
            },
            {
              "name": "opts"
            }
          ]
        },
        {
          "name": "formatXml",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 593,
              "column": 2
            },
            "end": {
              "line": 612,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "xml"
            }
          ]
        },
        {
          "name": "_getTypedValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 614,
              "column": 2
            },
            "end": {
              "line": 651,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ]
        },
        {
          "name": "_exampleFromJsonSchema",
          "description": "Creates a example structure for the JSON schema.\nOld but still in use.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 659,
              "column": 2
            },
            "end": {
              "line": 679,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema",
              "type": "Object",
              "description": "AMF schema schape"
            },
            {
              "name": "jsonSchema",
              "type": "String",
              "description": "Raw JSON schema value"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "Generated example model."
          }
        },
        {
          "name": "_exampleFromProperties",
          "description": "Creates an example from RAML type properties.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 688,
              "column": 2
            },
            "end": {
              "line": 713,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "properties",
              "type": "Array"
            },
            {
              "name": "mime",
              "type": "String",
              "description": "Media type"
            },
            {
              "name": "typeName",
              "type": "?String",
              "description": "Name of the RAML type."
            },
            {
              "name": "isArray",
              "type": "?Boolean",
              "description": "if true the result should be an array"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          }
        },
        {
          "name": "_jsonExampleFromProperties",
          "description": "Generates a JSON example from RAML's type properties.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 719,
              "column": 2
            },
            "end": {
              "line": 739,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "properties",
              "type": "Array",
              "description": "List of type properties"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          }
        },
        {
          "name": "_computeJsonProperyValue",
          "description": "Computes JSON value from a range shape.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 746,
              "column": 2
            },
            "end": {
              "line": 759,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "AMF's range model."
            },
            {
              "name": "typeName",
              "type": "?String",
              "description": "Optional, type name to use in Union type. By default first NodeShape."
            }
          ],
          "return": {
            "type": "any"
          }
        },
        {
          "name": "_computeJsonScalarValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 760,
              "column": 2
            },
            "end": {
              "line": 800,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range"
            }
          ]
        },
        {
          "name": "_computeJsonUnionValue",
          "description": "Computes JSON example from UnionShape",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 807,
              "column": 2
            },
            "end": {
              "line": 834,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "Type definition"
            },
            {
              "name": "typeName",
              "type": "?String",
              "description": "Optional, type name to use. By default first NodeShape."
            }
          ],
          "return": {
            "type": "(Object | undefined)"
          }
        },
        {
          "name": "_computeJsonObjectValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 836,
              "column": 2
            },
            "end": {
              "line": 842,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range"
            }
          ]
        },
        {
          "name": "_computeJsonArrayValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 844,
              "column": 2
            },
            "end": {
              "line": 863,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range"
            }
          ]
        },
        {
          "name": "_getTypeScalarValue",
          "description": "Gets a value from a Range shape for a scalar value.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 869,
              "column": 2
            },
            "end": {
              "line": 886,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "range",
              "type": "Object",
              "description": "AMF's range model."
            }
          ],
          "return": {
            "type": "any"
          }
        },
        {
          "name": "_xmlExampleFromProperties",
          "description": "Computes example from RAML type for XML media type.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 893,
              "column": 2
            },
            "end": {
              "line": 901,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "properties",
              "type": "Array.<Object>"
            },
            {
              "name": "typeName",
              "type": "?String",
              "description": "RAML type name"
            }
          ],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "_xmlProcessProperty",
          "description": "Processes an XML property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 908,
              "column": 2
            },
            "end": {
              "line": 969,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "doc",
              "type": "Document",
              "description": "Main document"
            },
            {
              "name": "node",
              "type": "Element",
              "description": "Current node"
            },
            {
              "name": "property",
              "type": "Object",
              "description": "AMF property"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_readDataType",
          "description": "Reads property data type.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 975,
              "column": 2
            },
            "end": {
              "line": 986,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Data type"
          }
        },
        {
          "name": "_appendXmlAttribute",
          "description": "Appends an attribute to the node from AMF property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 994,
              "column": 2
            },
            "end": {
              "line": 1010,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Element",
              "description": "Current node"
            },
            {
              "name": "property",
              "type": "Object",
              "description": "AMF property"
            },
            {
              "name": "range",
              "type": "Object",
              "description": "AMF range"
            },
            {
              "name": "serialization",
              "type": "Object",
              "description": "Serialization info"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_appendXmlElement",
          "description": "Appends an element to the node tree from a type",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1019,
              "column": 2
            },
            "end": {
              "line": 1048,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "doc",
              "type": "Document",
              "description": "Main document"
            },
            {
              "name": "node",
              "type": "Element",
              "description": "Current node"
            },
            {
              "name": "property",
              "type": "Object",
              "description": "AMF property"
            },
            {
              "name": "range",
              "type": "Object",
              "description": "AMF range"
            }
          ],
          "return": {
            "type": "Element",
            "desc": "Newly created element"
          }
        },
        {
          "name": "_appendXmlElements",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1050,
              "column": 2
            },
            "end": {
              "line": 1060,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "doc"
            },
            {
              "name": "node"
            },
            {
              "name": "property"
            },
            {
              "name": "range"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_appendXmlArray",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1062,
              "column": 2
            },
            "end": {
              "line": 1086,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "doc"
            },
            {
              "name": "node"
            },
            {
              "name": "property"
            },
            {
              "name": "range"
            },
            {
              "name": "isWrapped"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_xmlProcessUnionScalarProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1088,
              "column": 2
            },
            "end": {
              "line": 1093,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "doc"
            },
            {
              "name": "node"
            },
            {
              "name": "property"
            },
            {
              "name": "shape"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_xmlProcessDataProperty",
          "description": "Processes XML property from a data shape.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1102,
              "column": 2
            },
            "end": {
              "line": 1124,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "doc",
              "type": "Document",
              "description": "Main document"
            },
            {
              "name": "node",
              "type": "Element",
              "description": "Current node"
            },
            {
              "name": "property",
              "type": "Object",
              "description": "AMF property"
            },
            {
              "name": "name",
              "type": "String",
              "description": "Current property name"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_processDataArrayProperties",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1126,
              "column": 2
            },
            "end": {
              "line": 1144,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "doc"
            },
            {
              "name": "node"
            },
            {
              "name": "property"
            },
            {
              "name": "name"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_processDataObjectProperties",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1146,
              "column": 2
            },
            "end": {
              "line": 1160,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "doc"
            },
            {
              "name": "node"
            },
            {
              "name": "property"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dataNameFromKey",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1162,
              "column": 2
            },
            "end": {
              "line": 1173,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "key"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 65,
          "column": 0
        },
        "end": {
          "line": 1174,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ApiElements.ApiExampleGenerator",
      "attributes": [
        {
          "name": "amf-model",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 129,
              "column": 8
            },
            "end": {
              "line": 129,
              "column": 32
            }
          },
          "metadata": {},
          "type": "(Object | Array)",
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "ns",
          "description": "A namespace for AMF model",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 133,
              "column": 8
            },
            "end": {
              "line": 139,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "api-example-generator",
      "mixins": [
        "ApiElements.AmfHelperMixin"
      ]
    }
  ]
}
